//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cebuPacConnector.SessionManager {
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APICriticalFault : APIFault {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APISecurityFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIWarningFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIUnhandledServerFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIValidationFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIGeneralFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APICriticalFault))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorCodeField;
        
        private string errorTypeField;
        
        private string messageField;
        
        private string uniqueIDField;
        
        private string stackTraceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
                this.RaisePropertyChanged("ErrorType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
                this.RaisePropertyChanged("UniqueID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
                this.RaisePropertyChanged("StackTrace");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.navitaire.com/Ncl/Validation/ValidationResult")]
    public partial class ValidationResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Data.DataSet annotationsField;
        
        private string failedValidationDescriptionField;
        
        private string keyField;
        
        private bool successfulField;
        
        private bool successfulFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Data.DataSet Annotations {
            get {
                return this.annotationsField;
            }
            set {
                this.annotationsField = value;
                this.RaisePropertyChanged("Annotations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string FailedValidationDescription {
            get {
                return this.failedValidationDescriptionField;
            }
            set {
                this.failedValidationDescriptionField = value;
                this.RaisePropertyChanged("FailedValidationDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Successful {
            get {
                return this.successfulField;
            }
            set {
                this.successfulField = value;
                this.RaisePropertyChanged("Successful");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuccessfulSpecified {
            get {
                return this.successfulFieldSpecified;
            }
            set {
                this.successfulFieldSpecified = value;
                this.RaisePropertyChanged("SuccessfulSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Session")]
    public partial class LogonRequestData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string domainCodeField;
        
        private string agentNameField;
        
        private string passwordField;
        
        private string locationCodeField;
        
        private string roleCodeField;
        
        private string terminalInfoField;
        
        private string clientNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string DomainCode {
            get {
                return this.domainCodeField;
            }
            set {
                this.domainCodeField = value;
                this.RaisePropertyChanged("DomainCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string AgentName {
            get {
                return this.agentNameField;
            }
            set {
                this.agentNameField = value;
                this.RaisePropertyChanged("AgentName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string LocationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
                this.RaisePropertyChanged("LocationCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string RoleCode {
            get {
                return this.roleCodeField;
            }
            set {
                this.roleCodeField = value;
                this.RaisePropertyChanged("RoleCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string TerminalInfo {
            get {
                return this.terminalInfoField;
            }
            set {
                this.terminalInfoField = value;
                this.RaisePropertyChanged("TerminalInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
                this.RaisePropertyChanged("ClientName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APISecurityFault : APIFault {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIUnhandledServerFault))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIWarningFault : APIFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIUnhandledServerFault : APIWarningFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIValidationFault : APIFault {
        
        private ValidationResult[] validationResultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://www.navitaire.com/Ncl/Validation/ValidationResult")]
        public ValidationResult[] ValidationResults {
            get {
                return this.validationResultsField;
            }
            set {
                this.validationResultsField = value;
                this.RaisePropertyChanged("ValidationResults");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIGeneralFault : APIFault {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.navitaire.com/WebServices", ConfigurationName="SessionManager.ISessionManager")]
    public interface ISessionManager {
        
        // CODEGEN: Generating message contract since the operation ChangePassword is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePassword", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APICriticalFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPICritica" +
            "lFaultFault", Name="APICriticalFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIGeneralFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIGeneral" +
            "FaultFault", Name="APIGeneralFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIFaultFa" +
            "ult", Name="APIFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIValidationFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIValidat" +
            "ionFaultFault", Name="APIValidationFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIUnhandledServerFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIUnhandl" +
            "edServerFaultFault", Name="APIUnhandledServerFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIWarningFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIWarning" +
            "FaultFault", Name="APIWarningFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APISecurityFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPISecurit" +
            "yFaultFault", Name="APISecurityFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(APIFault))]
        cebuPacConnector.SessionManager.ChangePasswordResponse ChangePassword(cebuPacConnector.SessionManager.ChangePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePassword", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordResponse")]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.ChangePasswordResponse> ChangePasswordAsync(cebuPacConnector.SessionManager.ChangePasswordRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService) of message LogonRequest does not match the default value (http://schemas.navitaire.com/WebServices)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/Logon", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/LogonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIGeneralFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIGeneralFaultFaul" +
            "t", Name="APIGeneralFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APISecurityFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPISecurityFaultFau" +
            "lt", Name="APISecurityFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIFaultFault", Name="APIFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIUnhandledServerFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIUnhandledServerF" +
            "aultFault", Name="APIUnhandledServerFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APICriticalFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPICriticalFaultFau" +
            "lt", Name="APICriticalFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIWarningFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIWarningFaultFaul" +
            "t", Name="APIWarningFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIValidationFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIValidationFaultF" +
            "ault", Name="APIValidationFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(APIFault))]
        cebuPacConnector.SessionManager.LogonResponse Logon(cebuPacConnector.SessionManager.LogonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/Logon", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/LogonResponse")]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.LogonResponse> LogonAsync(cebuPacConnector.SessionManager.LogonRequest request);
        
        // CODEGEN: Generating message contract since the operation Logout is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/Logout", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIUnhandledServerFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIUnhandledServer" +
            "FaultFault", Name="APIUnhandledServerFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIGeneralFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIGeneralFaultFau" +
            "lt", Name="APIGeneralFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIFaultFault", Name="APIFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIWarningFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIWarningFaultFau" +
            "lt", Name="APIWarningFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APISecurityFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPISecurityFaultFa" +
            "ult", Name="APISecurityFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APICriticalFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPICriticalFaultFa" +
            "ult", Name="APICriticalFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIValidationFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIValidationFault" +
            "Fault", Name="APIValidationFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(APIFault))]
        cebuPacConnector.SessionManager.LogoutResponse Logout(cebuPacConnector.SessionManager.LogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/Logout", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutResponse")]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.LogoutResponse> LogoutAsync(cebuPacConnector.SessionManager.LogoutRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService) of message TransferSessionRequest does not match the default value (http://schemas.navitaire.com/WebServices)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSession", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIWarningFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIWarnin" +
            "gFaultFault", Name="APIWarningFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIGeneralFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIGenera" +
            "lFaultFault", Name="APIGeneralFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIValidationFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIValida" +
            "tionFaultFault", Name="APIValidationFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIFaultF" +
            "ault", Name="APIFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APIUnhandledServerFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIUnhand" +
            "ledServerFaultFault", Name="APIUnhandledServerFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APISecurityFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPISecuri" +
            "tyFaultFault", Name="APISecurityFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(cebuPacConnector.SessionManager.APICriticalFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPICritic" +
            "alFaultFault", Name="APICriticalFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(APIFault))]
        cebuPacConnector.SessionManager.TransferSessionResponse TransferSession(cebuPacConnector.SessionManager.TransferSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSession", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionResponse")]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.TransferSessionResponse> TransferSessionAsync(cebuPacConnector.SessionManager.TransferSessionRequest request);
        
        // CODEGEN: Generating message contract since the operation KeepAlive is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/KeepAlive", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/KeepAliveResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(APIFault))]
        cebuPacConnector.SessionManager.KeepAliveResponse KeepAlive(cebuPacConnector.SessionManager.KeepAliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/KeepAlive", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/KeepAliveResponse")]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.KeepAliveResponse> KeepAliveAsync(cebuPacConnector.SessionManager.KeepAliveRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePasswordRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class ChangePasswordRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cebuPacConnector.SessionManager.LogonRequestData logonRequestData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newPassword;
        
        public ChangePasswordRequest() {
        }
        
        public ChangePasswordRequest(int ContractVersion, cebuPacConnector.SessionManager.LogonRequestData logonRequestData, string newPassword) {
            this.ContractVersion = ContractVersion;
            this.logonRequestData = logonRequestData;
            this.newPassword = newPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePasswordResponse {
        
        public ChangePasswordResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class LogonRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public bool EnableExceptionStackTrace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cebuPacConnector.SessionManager.LogonRequestData logonRequestData;
        
        public LogonRequest() {
        }
        
        public LogonRequest(int ContractVersion, bool EnableExceptionStackTrace, cebuPacConnector.SessionManager.LogonRequestData logonRequestData) {
            this.ContractVersion = ContractVersion;
            this.EnableExceptionStackTrace = EnableExceptionStackTrace;
            this.logonRequestData = logonRequestData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonResponse", WrapperNamespace="http://schemas.navitaire.com/WebServices", IsWrapped=true)]
    public partial class LogonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Signature;
        
        public LogonResponse() {
        }
        
        public LogonResponse(string Signature) {
            this.Signature = Signature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoutRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class LogoutRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public bool EnableExceptionStackTrace;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Signature;
        
        public LogoutRequest() {
        }
        
        public LogoutRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature) {
            this.ContractVersion = ContractVersion;
            this.EnableExceptionStackTrace = EnableExceptionStackTrace;
            this.MessageContractVersion = MessageContractVersion;
            this.Signature = Signature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogoutResponse {
        
        public LogoutResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Session")]
    public partial class TokenRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tokenField;
        
        private string terminalInfoField;
        
        private ChannelType channelTypeField;
        
        private bool channelTypeFieldSpecified;
        
        private SystemType systemTypeField;
        
        private bool systemTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("Token");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string TerminalInfo {
            get {
                return this.terminalInfoField;
            }
            set {
                this.terminalInfoField = value;
                this.RaisePropertyChanged("TerminalInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ChannelType ChannelType {
            get {
                return this.channelTypeField;
            }
            set {
                this.channelTypeField = value;
                this.RaisePropertyChanged("ChannelType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelTypeSpecified {
            get {
                return this.channelTypeFieldSpecified;
            }
            set {
                this.channelTypeFieldSpecified = value;
                this.RaisePropertyChanged("ChannelTypeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public SystemType SystemType {
            get {
                return this.systemTypeField;
            }
            set {
                this.systemTypeField = value;
                this.RaisePropertyChanged("SystemType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SystemTypeSpecified {
            get {
                return this.systemTypeFieldSpecified;
            }
            set {
                this.systemTypeFieldSpecified = value;
                this.RaisePropertyChanged("SystemTypeSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum ChannelType {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Direct,
        
        /// <remarks/>
        Web,
        
        /// <remarks/>
        GDS,
        
        /// <remarks/>
        API,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum SystemType {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        WinRez,
        
        /// <remarks/>
        FareManager,
        
        /// <remarks/>
        ScheduleManager,
        
        /// <remarks/>
        WinManager,
        
        /// <remarks/>
        ConsoleRez,
        
        /// <remarks/>
        WebRez,
        
        /// <remarks/>
        WebServicesAPI,
        
        /// <remarks/>
        WebServicesESC,
        
        /// <remarks/>
        InternalService,
        
        /// <remarks/>
        WebReporting,
        
        /// <remarks/>
        TaxAndFeeManager,
        
        /// <remarks/>
        DCS,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Session")]
    public partial class TransferSessionResponseData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string signatureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
                this.RaisePropertyChanged("Signature");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferSessionRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class TransferSessionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cebuPacConnector.SessionManager.TokenRequest tokenRequest;
        
        public TransferSessionRequest() {
        }
        
        public TransferSessionRequest(int ContractVersion, cebuPacConnector.SessionManager.TokenRequest tokenRequest) {
            this.ContractVersion = ContractVersion;
            this.tokenRequest = tokenRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferSessionResponse", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class TransferSessionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cebuPacConnector.SessionManager.TransferSessionResponseData TransferSessionResponseData;
        
        public TransferSessionResponse() {
        }
        
        public TransferSessionResponse(cebuPacConnector.SessionManager.TransferSessionResponseData TransferSessionResponseData) {
            this.TransferSessionResponseData = TransferSessionResponseData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeepAliveRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class KeepAliveRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public bool EnableExceptionStackTrace;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Signature;
        
        public KeepAliveRequest() {
        }
        
        public KeepAliveRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature) {
            this.ContractVersion = ContractVersion;
            this.EnableExceptionStackTrace = EnableExceptionStackTrace;
            this.MessageContractVersion = MessageContractVersion;
            this.Signature = Signature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KeepAliveResponse {
        
        public KeepAliveResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISessionManagerChannel : cebuPacConnector.SessionManager.ISessionManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionManagerClient : System.ServiceModel.ClientBase<cebuPacConnector.SessionManager.ISessionManager>, cebuPacConnector.SessionManager.ISessionManager {
        
        public SessionManagerClient() {
        }
        
        public SessionManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SessionManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        cebuPacConnector.SessionManager.ChangePasswordResponse cebuPacConnector.SessionManager.ISessionManager.ChangePassword(cebuPacConnector.SessionManager.ChangePasswordRequest request) {
            return base.Channel.ChangePassword(request);
        }
        
        public void ChangePassword(int ContractVersion, cebuPacConnector.SessionManager.LogonRequestData logonRequestData, string newPassword) {
            cebuPacConnector.SessionManager.ChangePasswordRequest inValue = new cebuPacConnector.SessionManager.ChangePasswordRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.logonRequestData = logonRequestData;
            inValue.newPassword = newPassword;
            cebuPacConnector.SessionManager.ChangePasswordResponse retVal = ((cebuPacConnector.SessionManager.ISessionManager)(this)).ChangePassword(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.ChangePasswordResponse> cebuPacConnector.SessionManager.ISessionManager.ChangePasswordAsync(cebuPacConnector.SessionManager.ChangePasswordRequest request) {
            return base.Channel.ChangePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<cebuPacConnector.SessionManager.ChangePasswordResponse> ChangePasswordAsync(int ContractVersion, cebuPacConnector.SessionManager.LogonRequestData logonRequestData, string newPassword) {
            cebuPacConnector.SessionManager.ChangePasswordRequest inValue = new cebuPacConnector.SessionManager.ChangePasswordRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.logonRequestData = logonRequestData;
            inValue.newPassword = newPassword;
            return ((cebuPacConnector.SessionManager.ISessionManager)(this)).ChangePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        cebuPacConnector.SessionManager.LogonResponse cebuPacConnector.SessionManager.ISessionManager.Logon(cebuPacConnector.SessionManager.LogonRequest request) {
            return base.Channel.Logon(request);
        }
        
        public string Logon(int ContractVersion, bool EnableExceptionStackTrace, cebuPacConnector.SessionManager.LogonRequestData logonRequestData) {
            cebuPacConnector.SessionManager.LogonRequest inValue = new cebuPacConnector.SessionManager.LogonRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
            inValue.logonRequestData = logonRequestData;
            cebuPacConnector.SessionManager.LogonResponse retVal = ((cebuPacConnector.SessionManager.ISessionManager)(this)).Logon(inValue);
            return retVal.Signature;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.LogonResponse> cebuPacConnector.SessionManager.ISessionManager.LogonAsync(cebuPacConnector.SessionManager.LogonRequest request) {
            return base.Channel.LogonAsync(request);
        }
        
        public System.Threading.Tasks.Task<cebuPacConnector.SessionManager.LogonResponse> LogonAsync(int ContractVersion, bool EnableExceptionStackTrace, cebuPacConnector.SessionManager.LogonRequestData logonRequestData) {
            cebuPacConnector.SessionManager.LogonRequest inValue = new cebuPacConnector.SessionManager.LogonRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
            inValue.logonRequestData = logonRequestData;
            return ((cebuPacConnector.SessionManager.ISessionManager)(this)).LogonAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        cebuPacConnector.SessionManager.LogoutResponse cebuPacConnector.SessionManager.ISessionManager.Logout(cebuPacConnector.SessionManager.LogoutRequest request) {
            return base.Channel.Logout(request);
        }
        
        public void Logout(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature) {
            cebuPacConnector.SessionManager.LogoutRequest inValue = new cebuPacConnector.SessionManager.LogoutRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
            inValue.MessageContractVersion = MessageContractVersion;
            inValue.Signature = Signature;
            cebuPacConnector.SessionManager.LogoutResponse retVal = ((cebuPacConnector.SessionManager.ISessionManager)(this)).Logout(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.LogoutResponse> cebuPacConnector.SessionManager.ISessionManager.LogoutAsync(cebuPacConnector.SessionManager.LogoutRequest request) {
            return base.Channel.LogoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<cebuPacConnector.SessionManager.LogoutResponse> LogoutAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature) {
            cebuPacConnector.SessionManager.LogoutRequest inValue = new cebuPacConnector.SessionManager.LogoutRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
            inValue.MessageContractVersion = MessageContractVersion;
            inValue.Signature = Signature;
            return ((cebuPacConnector.SessionManager.ISessionManager)(this)).LogoutAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        cebuPacConnector.SessionManager.TransferSessionResponse cebuPacConnector.SessionManager.ISessionManager.TransferSession(cebuPacConnector.SessionManager.TransferSessionRequest request) {
            return base.Channel.TransferSession(request);
        }
        
        public cebuPacConnector.SessionManager.TransferSessionResponseData TransferSession(int ContractVersion, cebuPacConnector.SessionManager.TokenRequest tokenRequest) {
            cebuPacConnector.SessionManager.TransferSessionRequest inValue = new cebuPacConnector.SessionManager.TransferSessionRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.tokenRequest = tokenRequest;
            cebuPacConnector.SessionManager.TransferSessionResponse retVal = ((cebuPacConnector.SessionManager.ISessionManager)(this)).TransferSession(inValue);
            return retVal.TransferSessionResponseData;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.TransferSessionResponse> cebuPacConnector.SessionManager.ISessionManager.TransferSessionAsync(cebuPacConnector.SessionManager.TransferSessionRequest request) {
            return base.Channel.TransferSessionAsync(request);
        }
        
        public System.Threading.Tasks.Task<cebuPacConnector.SessionManager.TransferSessionResponse> TransferSessionAsync(int ContractVersion, cebuPacConnector.SessionManager.TokenRequest tokenRequest) {
            cebuPacConnector.SessionManager.TransferSessionRequest inValue = new cebuPacConnector.SessionManager.TransferSessionRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.tokenRequest = tokenRequest;
            return ((cebuPacConnector.SessionManager.ISessionManager)(this)).TransferSessionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        cebuPacConnector.SessionManager.KeepAliveResponse cebuPacConnector.SessionManager.ISessionManager.KeepAlive(cebuPacConnector.SessionManager.KeepAliveRequest request) {
            return base.Channel.KeepAlive(request);
        }
        
        public void KeepAlive(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature) {
            cebuPacConnector.SessionManager.KeepAliveRequest inValue = new cebuPacConnector.SessionManager.KeepAliveRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
            inValue.MessageContractVersion = MessageContractVersion;
            inValue.Signature = Signature;
            cebuPacConnector.SessionManager.KeepAliveResponse retVal = ((cebuPacConnector.SessionManager.ISessionManager)(this)).KeepAlive(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<cebuPacConnector.SessionManager.KeepAliveResponse> cebuPacConnector.SessionManager.ISessionManager.KeepAliveAsync(cebuPacConnector.SessionManager.KeepAliveRequest request) {
            return base.Channel.KeepAliveAsync(request);
        }
        
        public System.Threading.Tasks.Task<cebuPacConnector.SessionManager.KeepAliveResponse> KeepAliveAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature) {
            cebuPacConnector.SessionManager.KeepAliveRequest inValue = new cebuPacConnector.SessionManager.KeepAliveRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
            inValue.MessageContractVersion = MessageContractVersion;
            inValue.Signature = Signature;
            return ((cebuPacConnector.SessionManager.ISessionManager)(this)).KeepAliveAsync(inValue);
        }
    }
}
